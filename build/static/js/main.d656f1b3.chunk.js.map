{"version":3,"sources":["firebase.js","SidebarChat.js","Sidebar.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","GoogleAuthProvider","SidebarChat","addNewChat","name","id","className","onClick","roomName","prompt","collection","add","to","Avatar","Sidebar","useState","rooms","setrooms","useEffect","unsub","onSnapshot","item","docs","map","doc","data","IconButton","type","placeholder","Chat","message","setMessage","roomId","useParams","setRoomName","console","log","snapshot","href","AttachFile","onSubmit","e","preventDefault","onChange","target","value","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d656f1b3.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyB6tclhjMjgnDANP3b_uy8L4Y0o310wFsQ',\r\n  authDomain: 'whatsapp-clone-c4c80.firebaseapp.com',\r\n  projectId: 'whatsapp-clone-c4c80',\r\n  storageBucket: 'whatsapp-clone-c4c80.appspot.com',\r\n  messagingSenderId: '804794929634',\r\n  appId: '1:804794929634:web:4df6b4130d4eee06f3a9bb',\r\n  measurementId: 'G-MCPPG3HHBG',\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport const auth = firebase.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport default db;\r\n","import React from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport db from './firebase';\r\nimport { Link } from 'react-router-dom';\r\nfunction SidebarChat({ addNewChat, name, id }) {\r\n  if (!addNewChat) {\r\n    return (\r\n      <Link to={`/rooms/${id}`}>\r\n        <div className='sidebarChat'>\r\n          <Avatar></Avatar>\r\n          <div className='sidebarChat_info'>\r\n            <h2>{name}</h2>\r\n            <p>Last Message...</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className='sidebarChat'\r\n        onClick={() => {\r\n          const roomName = prompt('Enter name for the chat');\r\n          if (roomName) {\r\n            db.collection('rooms').add({ name: roomName });\r\n          }\r\n        }}\r\n      >\r\n        <h2>Add New Chat</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './Sidebar.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nfunction Sidebar() {\r\n  const [rooms, setrooms] = useState([]);\r\n  useEffect(() => {\r\n    const unsub = db.collection('rooms').onSnapshot((item) => {\r\n      setrooms(\r\n        item.docs.map((doc) => {\r\n          return {\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          };\r\n        })\r\n      );\r\n    });\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className='sidebar'>\r\n      <div className='sidebar__header'>\r\n        <Avatar />\r\n        <div className='sidebar__headerRight'>\r\n          <IconButton className='sidebar__icon'>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton className='sidebar__icon'>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton className='sidebar__icon'>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className='sidebar__search'>\r\n        <div className='sidebar__searchcontainer'>\r\n          <SearchOutlined />\r\n          <input type='text' placeholder='Search or Start new chat' />\r\n        </div>\r\n      </div>\r\n      <div className='sidebar__chat'>\r\n        <SidebarChat addNewChat />\r\n        {rooms.map((item) => {\r\n          return (\r\n            <SidebarChat key={item.id} id={item.id} name={item.data.name} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './Chat.css';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport db from './firebase';\r\n\r\nfunction Chat() {\r\n  const [message, setMessage] = useState('');\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState('');\r\n  useEffect(() => {\r\n    console.log(roomId);\r\n    if (roomId) {\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => {\r\n          setRoomName(snapshot.data().name);\r\n        });\r\n    }\r\n  }, [roomId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('hello');\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className='chat'>\r\n      {/* Chat Header */}\r\n      <div className='chat__header'>\r\n        <Avatar></Avatar>\r\n        <div className='chat__headerInfo'>\r\n          <h3>{roomName}</h3>\r\n          <p>Last seen...</p>\r\n        </div>\r\n        <div className='chat__headerRight'>\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      {/* Chat Message */}\r\n      <div className='chat__body'>\r\n        <div className='chat__message'>\r\n          <a href='#' className='chat__name'>\r\n            Anas\r\n          </a>\r\n          <p className='chat__content'>Random text</p>\r\n          <p className='chat__date'>3:44 PM</p>\r\n        </div>\r\n      </div>\r\n      {/* chat footer */}\r\n      <div className='chat__footer'>\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <AttachFile />\r\n        </IconButton>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type='text'\r\n            onChange={(e) => {\r\n              setMessage(e.target.value);\r\n            }}\r\n            value={message}\r\n          />\r\n        </form>\r\n        <IconButton>\r\n          <MicIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useState } from 'react';\nfunction App() {\n  const [user, setuser] = useState('No');\n  return (\n    <div className='app'>\n      <div className='app__body'>\n        <Router>\n          <Switch>\n            <Route path='/' exact>\n              <Sidebar />\n            </Route>\n            <Route path='/rooms/:roomId'>\n              <Sidebar />\n              <Chat />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}